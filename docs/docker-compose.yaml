# MODE="LIVE|QA|PUSH" GOOGLE_ANALYTICS_KEY= UPSTREAM_REPO=https://github.com/datajoint/sci-viz.git HOST_UID=$(id -u) docker compose -f docs/docker-compose.yaml up --build
#
# navigate to http://localhost/
version: '2.4'
services:
  docs:
    build:
      dockerfile: docs/.docker/Dockerfile
      context: ../
    image: sci-viz-docs
    environment:
      - UPSTREAM_REPO
      - MODE
      - GOOGLE_ANALYTICS_KEY
    volumes:
      - ../docs:/main/docs
      - ../package.json:/main/package.json
    user: ${HOST_UID}:anaconda
    ports:
      - 80:80
    command:
      - sh
      - -c
      - |
        git config --global --add safe.directory /main
        set -e
        if echo "$${MODE}" | grep -i live &>/dev/null; then
            mkdocs serve --config-file ./docs/mkdocs.yaml -a 0.0.0.0:80
        elif echo "$${MODE}" | grep -iE "qa|push" &>/dev/null; then
            echo "INFO::Delete gh-pages branch"
            git branch -D gh-pages || true
            echo "INFO::Fetch upstream gh-pages"
            git fetch $${UPSTREAM_REPO} gh-pages:gh-pages && git switch gh-pages || git switch --orphan gh-pages && git commit --allow-empty -m "init commit"
            echo "INFO::mike"
            mike deploy --config-file ./docs/mkdocs.yaml -u $$(cat package.json | jq -r '.version' | grep -oE '\d+\.\d+') latest
            mike set-default --config-file ./docs/mkdocs.yaml latest
            if echo "$${MODE}" | grep -i qa &>/dev/null; then
                mike serve --config-file ./docs/mkdocs.yaml -a 0.0.0.0:80
            elif echo "$${MODE}" | grep -i push &>/dev/null; then
                echo "INFO::Push gh-pages to upstream"
                git push $${UPSTREAM_REPO} gh-pages
            fi
        else
            echo "Unexpected mode..."
            exit 1
        fi
