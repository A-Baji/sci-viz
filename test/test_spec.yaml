version: 'v0.0.0'
LabBook: null
SciViz: # top level tab
  auth:
    mode: database # reuse from DJ LabBook
  pages: # individual pages
    Session: # name reference of the page
      route: /session1 # dev, be careful of name collisions
      args: null
      hidden: false
      grids:
        grid1:
          type: fixed
          max_component_per_page: 1
          columns: 1
          row_height: 450
          components:
            component3:
              route: /query1
              x: 0 # component indexes at top left corner
              y: 0
              height: 1
              width: 1
              type: entry-browser 
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(vms):
                    TableA, TableB = (vms['test_group1_simple'].TableA, vms['test_group1_simple'].TableB)
                    return TableA * TableB, dict(order_by='b_number')
    MKdownTEST:
      route: /mkdown # dev, be careful of name collisions
      grids:
        grid1:
          type: fixed
          max_component_per_page: 20
          columns: 1
          row_height: 800
          components:
            component1:
              x: 0
              y: 0
              height: 1
              width: 1
              type: markdown
              text: >-
                # Splashpage \n
                ### Hello! \n
                this is a test for markdown support \n
                ~~~python \n
                print('Nice! Codeblock support!') \n
                ~~~
    Mouse:
      route: /mouse
      args:
        - subject_name
        - session_number
      hidden: true
      grids:
        grid1:
          type: fixed
          max_component_per_page: 20
          columns: 2
          row_height: 450
          components:
            component1:
              route: /query2
              x: 0
              y: 0
              height: 1
              width: 1
              type: plot:png
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(vms):
                    TableA, TableB = (vms['test_group1_simple'].TableA, vms['test_group1_simple'].TableB)
                    return ((TableA * TableB).proj(
                        ...,
                        #_sciviz_font='IF(a_name = "Raphael", "rgb(255, 0, 0)", NULL)',
                        _sciviz_background='IF(a_name = "Raphael", "rgba(50, 255, 0, 0.16)", "rgba(255, 0, 0, 0.16)")',
                        )), dict(order_by='b_number')
            component2:
              route: /query3
              x: 1
              y: 0
              height: 1
              width: 1
              type: plot:plotly1
              restriction: >
                def restriction(**kwargs):
                    return dict(a_id=0, **kwargs)
              dj_query: >
                def dj_query(vms):
                    TableA, TableB = (vms['test_group1_simple'].TableA, vms['test_group1_simple'].TableB)
                    return TableA * TableB, dict(order_by='b_number')
              diff_checker: >
                def diff_checker(**args):
                  return TrainingStatsPlotly.proj(hash='trial_mean_hash')

